import type { Metadata } from 'next';
import localFont from 'next/font/local';
// import { NextIntlClientProvider } from "next-intl";
// import { getMessages } from "next-intl/server";
import '../globals.css';

const geistSans = localFont({
  src: '../fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: '../fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'NextJS Boilerplate',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  // Get messages for the current locale
  // const messages = await getMessages();

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Wrap the children with NextIntlClientProvider */}
        {/* <NextIntlClientProvider messages={messages}> */}
        {children}
        {/* </NextIntlClientProvider> */}
      </body>
    </html>
  );
}
